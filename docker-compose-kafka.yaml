version: '2'

services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/Users/colaborador/zookeeper-docker'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes


  kafka:
    image: 'docker.io/bitnami/kafka:3.2'
    restart: "no"
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/Users/colaborador/kafka-docker'
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    depends_on:
      - zookeeper

  
#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    restart: "no"
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:9093"
#      JVM_OPTS: "-Xms512M -Xmx512M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
#    depends_on:
#      - "kafka"      


volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local